-firewalld ,selinux OFF
systemctl disable firewalld --now; setenforce 0;

-openssl, haproxy 설치 
yum install -y curl wget haproxy openssl 

-openssl 확인
openssl version

-haproxy 확인 
systemctl status haproxy

- SSL 인증서 발급 
1. self singned SSL 인증서 발급 
mkdir /etc/haproxy/certs/; cd /etc/haproxy/certs/    
openssl genrsa -out rootCA.key 2048    
openssl req -new -key rootCA.key -out rootCA.csr    
openssl x509 -req -in rootCA.csr -signkey rootCA.key  -out rootCA.crt
cat rootCA.key rootCA.crt > rootCA.pem

2.Let’s Encrypt를 통한 무료 인증서 발급 (도메인 필요 > Cloud Domain 구입후 Cloud DNS로 사용함.)
yum install -y certbot
certbot --version 
	=> certbot 1.11.0

-standalone 방식 사용 ( 80포트 사용하여 가상의 웹서버를 띄워 인증서를 발급합. 80포트 사용중인경우 중지후 사용해야함.. )
certbot certonly --standalone -d testdomainname.info

-webroot 방식 사용 ( webroot 경로를 직접지정하여 인증서 발급 )
certbot certonly --text --webroot --webroot-path /etc/haproxy -d testdomainname.info


cd /etc/letsencrypt/live/testdomainname.info/
cat cert.pem chain.pem privkey.pem >site.pem


- 기존 설정파일 백업
cd /etc/haproxy/; cp haproxy.cfg haproxy.cfg.org
haproxy -f /etc/haproxy/haproxy.cfg -c


- 설정파일 변경 
*log설정 
vi /etc/rsyslog.d/49-haproxy.conf
############################################
$ModLoad imudp
$UDPServerAddress 127.0.0.1
$UDPServerRun 514

local0.* -/var/log/haproxy/haproxy_0.log
local1.* -/var/log/haproxy/haproxy_1.log
############################################

vi /etc/rsyslog.conf
###########################################
loacl0.none /var/log/messages 
###########################################

systemctl restart rsyslog



vi haproxy.cfg 
############################################################
global
    #log파일 설정
    log 127.0.0.1 local0
    log 127.0.0.1 local1 notice
    tune.ssl.default-dh-param 2048
    # SSL-LAB 권고사항 (A등급 : SSL V3 사용 x, TLS 1.0 / TLS 1.1 사용 x)
    ssl-default-bind-options no-sslv3
    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
.
.
.

frontend http-redirect
        bind *:80
        bind *:443 ssl crt /etc/letsencrypt/live/testdomainname.info/site.pem force-tlsv12
        reqadd X-Forwarded-Proto:\ https
        redirect scheme https code 301 if !{ ssl_fc }
        acl url_static hdr_end(host) -i testdomainname.info
        use_backend  web-server if url_static

frontend https
        bind *:8080
        #bind *:443 ssl crt /etc/haproxy/certs/rootCA.pem force-tlsv12
		# OR
	#bind *:443 ssl crt /etc/letsencrypt/live/testdomainname.info/site.pem force-tlsv12
        mode http
        reqadd X-Forwarded-Proto:\ https		
        redirect scheme https code 301 if !{ ssl_fc }
        
	#acl url_static       path_beg       -i /static /images /javascript /stylesheets
        #acl url_static       path_end       -i .jpg .gif .png .css .js
	acl url_static hdr_end(host) -i testdomainname.info			#acl로 domian으로 들어오면 backend로 전달함.
	use_backend web-server if url_static			
	
        default_backend web-server

backend web-server
        balance roundrobin
        option forwardfor
        option httplog
        server web 192.168.1.4:80 check
		
#port forwarding 
#listen test-web 0.0.0.0:8090
#		mode http
#		option httpclose
#		option forwardfor
#		server test-web1 192.168.2.100:8090 check 
# 포트포워딩은 같은 포트로만 적용		
			
############################################################

- systemctl restart haproxy

-인증서 만료일 확인 
certbot certificates

--인증서 갱신방법
systemctl stop haproxy
certbot renew --dry-run #테스트
certbot renew
*강제갱신
certbot renew --force-renew --cert-name testdomainname.info-0001


*ssl-lab에서 A등급으로 나오는지 확인 ( CNAME(www.xxxxxx)이 아닌 A 레코드로 입력하여 확인)

vi renew_cert.sh
#!/bin/bash
systemctl stop haproxy
certbot renew --dry-run
cd /etc/letsencrypt/live/testdomainname.info/
cat cert.pem chain.pem privkey.pem >site.pem
systemctl start haproxy
certbot certificates
