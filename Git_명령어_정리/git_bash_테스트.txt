- test, dev branch 추가 
 git branch test
 git branch dev 

- branch 확인
 git branch
 
- 원격 branch 확인 
 git branch -r 
 

* dev > test > master 로 파일 신규추가 
[dev]
git checkout dev 

$ll 
total 1
-rw-r--r-- 1 wocheon 197121 3 Jul 14 09:02 test.txt

rm test.txt 

vi newfile.txt
 
cat newfile.txt
----------------------
dev : create file
----------------------

git add .
git commit -m 'dev'
git push origin dev 

[test]
git checkout test 
echo "test : create file and check"  >> newfile.txt
git add .
git commit 'test'
git push origin test

[master]
git checkout master
echo "master : chck file"  >> newfile.txt
git add .
git commit 'master'
git push origin master 

*각 브랜치에서 신규 파일 생성 시
dev 와 test쪽에 각각 파일 생성 후 master에서
 git merge test
 git merge dev
 > add > push
test, dev에 git merge master 후 push 

* master > test > dev 로 변경사항 merge 및 push

[master]
git checkout master

$ cat newfile.txt
dev : delete
test : delete
master : chck file

git add .
git commit 'master_chage'
git push origin master 

[test]
git checkout test 
git merge master 
git push origin test 

[dev]
git checkout dev 
git merge test 
git push origin dev


* merge시 충돌 발생 
=> 같은라인에 서로다른 변경사항이 있는경우 발생함


				 |-- test_change
master_chage ----
				 |-- dev_del
[test]
git checkout test 
$ cat newfile.txt
dev : delete
master : chck file

git add .
git commit -m 'test_change'
git push origin test 

[dev]
git checkout dev 
$ cat newfile.txt
test : delete
master : chck file

git add .
git commit -m 'dev_del'
git push origin dev

git merge test 시 충돌발생 

=해결법 
1.충돌하는 파일의 버전을 확인한후 기존 파일 삭제 후
최신버전의 branch에 있는 파일을 가져오기

[dev]
rm newfile.txt 
git checkout -p test 
git add .
git commit -m '

or 

충돌내용 수정하여 merge 후 push
(두 방법 모두 임시방편이므로 신규 업데이트 후
 cherrypick으로 commit을 맞추는것이 좋음)

* cherrypick 사용 
dev > test > master 로 변경사항 업데이트를 진행
[dev]
$ cat newfile.txt
dev : v3
test : v3
master : v3

add 후 commit > push 

[test]
git checkout test 
git log --branches --oneline로 dev의 commit 내역확인

git cherry-pick [dev_commit_id]
git push origin test 



