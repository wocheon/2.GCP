Kubernetes Cluster 환경 구축
우분투 설치 완료후

- 모든 노드에서

apt-get install -y git curl wget vim



vim ~/.bashrc 

84번째 줄에 아래의 내용을 추가한다

alias vi='vim'

저장후 빠져 나와서 "su"



vi /etc/hosts 에 아래 내용을 추가



211.183.3.100 master

211.183.3.101 node1

211.183.3.102 node2

211.183.3.103 node3



- node1 에서만

systemctl set-default multi-user.target




- 모든노드에서

스왑메모리를 허용하지 않는다. 


swapoff -a



- master 에서만 vmware tool 설치

VM 메뉴에서 -> install vmware tools... 클리



cp /media/docker/VM[tab]/VM[tab] .

tar xfz VM[tab]

cd vmware-too[tab]

./vmware-install.pl


y <-- 처음만 y 나머지는 모두 그냥 엔터




이제 각 노드별(master, node1) 로 IP, GW, DNS 를 설정한다.



node1 -> systemctl set-default graphical.target



아래 내용은 모든 노드에서 실행



apt-get install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

apt-cache madison docker-ce 

apt-cache madison docker-ce-cli 

apt-get install docker-ce=5:18.09.9~3-0~ubuntu-bionic docker-ce-cli=5:18.09.9~3-0~ubuntu-bionic containerd.io

docker --version

apt-get update



curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -





cat <<EOF > /etc/apt/sources.list.d/kubernetes.list

deb http://apt.kubernetes.io/ kubernetes-xenial main

EOF



apt-get update

apt-get install -y kubelet kubeadm kubectl kubernetes-cni



여기까지 정상적으로 완료되었다면 이제 node1 을 종료하고



node1 을 복사(Full Clone)해서 node2, node3 을 만든



node2, 3 을 실행하여 아래의 내용을 점검

1. hostname 변경하기



2. node2 -> 211.183.3.102

node3 -> 211.183.3.103



3. /etc/hosts 에 들어가서 node1 이라고 되어 있는 부분

127.0.1.1 node1

위의 부분을 각각 node1, node2 로 바꾼다



4. node1 ~ 3 까지는 모두 "systemctl set-default multi-user.target" 



모든 내용확인 후 reboot



각 노드에서 서로간에 ping 이되는지 여부 확인

특히 각 노드에서 master 로는 반드시 ping 이 가능해야 한다.




쿠버네티스 초기화

모든 노드에서 swapoff -a 



master 에서 아래의 명령을 실행하면 토큰이 발행된다.

kubeadm init --apiserver-advertise-address 211.183.3.100 --pod-network-cidr=192.168.0.0/16



kubeadm init --apiserver-advertise-address 172.16.1.25 --pod-network-cidr=192.168.0.0/16



예)

kubeadm join 211.183.3.100:6443 --token 1by71b.fi41vzfwfhej3du6 \

--discovery-token-ca-cert-hash sha256:2beab8e2f7ebaa5364a22b8bc78d2f6ab5aecb358eef641076b9eeff618fdb3c



위와 같은 토큰이 발행되고 이 토큰을 이용하여 master 에 join 하게 된다. 방화벽에서 해당 포트를 열어주어야 한다. 단 향후 서비스의 편의를 위해 모든 노드에서 ufw disable 을 한 뒤에 위의 토큰을 각 노드에 붙여넣기 한다.



이후 역시 master 노드에서 아래의 내용을 실행하여 초기화를 마무리 한다.

root@master:~# mkdir -p $HOME/.kube

root@master:~# sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config

root@master:~# sudo chown $(id -u):$(id -g) $HOME/.kube/config

root@master:~# export KUBECONFIG=/etc/kubernetes/admin.conf

root@master:~#

root@master:~# kubectl get node

NAME STATUS ROLES AGE VERSION

master NotReady control-plane,master 4m18s v1.21.1

node1 NotReady <none> 73s v1.21.1

node2 NotReady <none> 59s v1.21.1

node3 NotReady <none> 57s v1.21.1

root@master:~#



이제 오버레이 네트워크를 위한 매니페스트 파일을 master 에서 설치하면 끝!!!

kubectl apply -f https://docs.projectcalico.org/v3.8/manifests/calico.yaml



시간이 조금 지난 뒤에 master 에서 아래를 실행해 본다.



root@master:~# kubectl get node

NAME STATUS ROLES AGE VERSION

master Ready control-plane,master 11m v1.21.1

node1 Ready <none> 8m22s v1.21.1

node2 Ready <none> 8m8s v1.21.1

node3 Ready <none> 8m6s v1.21.1

root@master:~#
[출처] Kubernetes Cluster 환경 구축|작성자 ciw0707
